{
    "info": {
        "name": "Almatar Loyalty API",
        "description": "API for Almatar Loyalty Points Transfer System",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:3000",
            "type": "string"
        },
        {
            "key": "authToken",
            "value": "",
            "type": "string"
        }
    ],
    "item": [
        {
            "name": "Authentication",
            "description": "User registration and login endpoints",
            "item": [
                {
                    "name": "Register User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"name\": \"ibrahim tantawy\",\n  \"email\": \"ibrahim.tantawy@example.com\",\n  \"password\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "register"
                            ]
                        },
                        "description": "Register a new user with 500 initial points"
                    },
                    "response": []
                },
                {
                    "name": "Login User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"ibrahim.tantawy@example.com\",\n  \"password\": \"password123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "login"
                            ]
                        },
                        "description": "Login user and get JWT token"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "User Management",
            "description": "User-related endpoints",
            "item": [
                {
                    "name": "Get User Points",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/users/points",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "users",
                                "points"
                            ]
                        },
                        "description": "Get current user's points balance"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Transfers",
            "description": "Points transfer management endpoints",
            "item": [
                {
                    "name": "Create Transfer",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"recipientEmail\": \"jane.smith@example.com\",\n  \"points\": 100\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/transfers",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "transfers"
                            ]
                        },
                        "description": "Create a new points transfer (expires in 10 minutes)"
                    },
                    "response": []
                },
                {
                    "name": "Confirm Transfer",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"token\": \"transfer_token_received_from_sender\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/transfers/confirm",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "transfers",
                                "confirm"
                            ]
                        },
                        "description": "Confirm a pending transfer (must be recipient)"
                    },
                    "response": []
                },
                {
                    "name": "Get User Transfers",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{authToken}}"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/transfers?page=1&limit=10",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "transfers"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "limit",
                                    "value": "10"
                                }
                            ]
                        },
                        "description": "Get paginated list of user's transfers (sent and received)"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Health Check",
            "description": "System health monitoring",
            "item": [
                {
                    "name": "Health Check",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/health",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "health"
                            ]
                        },
                        "description": "Check if API is running"
                    },
                    "response": []
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "console.log('Request:', pm.request);"
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "pm.test('Status code is 200', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "// For successful responses, store auth token",
                    "if (pm.response.code === 200 || pm.response.code === 201) {",
                    "    var responseData = pm.response.json();",
                    "    if (responseData.data && responseData.data.token) {",
                    "        pm.collectionVariables.set('authToken', responseData.data.token);",
                    "        console.log('Auth token stored:', responseData.data.token);",
                    "    }",
                    "}"
                ]
            }
        }
    ]
}